<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: devise | 舞命小丢]]></title>
  <link href="http://7d-life.com/blog/categories/devise/atom.xml" rel="self"/>
  <link href="http://7d-life.com/"/>
  <updated>2012-05-18T17:38:06+08:00</updated>
  <id>http://7d-life.com/</id>
  <author>
    <name><![CDATA[舞命小丢]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[use devise on legacy database width md5]]></title>
    <link href="http://7d-life.com/blog/2012/05/18/use-devise-on-legacy-database-width-md5/"/>
    <updated>2012-05-18T17:01:00+08:00</updated>
    <id>http://7d-life.com/blog/2012/05/18/use-devise-on-legacy-database-width-md5</id>
    <content type="html"><![CDATA[<p>建议使用deivse 2.1,并且添加devise-encryptable</p>

<p>``` ruby</p>

<h1>Gemfile</h1>

<p>gem 'devise', '~> 2.1'
gem 'devise-encryptable'
```</p>

<p>实现自己的加密方式,我是使用的是md5：</p>

<p>``` ruby</p>

<h1>lib/devise/encryptable/encryptors/md5.rb</h1>

<p>require 'digest/md5'</p>

<p>module Devise
  module Encryptable</p>

<pre><code>module Encryptors
  class Md5 &lt; Base
    def self.digest(password, stretches, salt, pepper)
      str = [password, salt].flatten.compact.join
      Digest::MD5.hexdigest(str)
    end
  end
end
</code></pre>

<p>  end
end
```</p>

<p>如果Devise版本低于2.1</p>

<p>``` ruby</p>

<h1>lib/devise/encryptors/md5.rb</h1>

<p>require 'digest/md5'</p>

<p>module Devise
  module Encryptors</p>

<pre><code>class Md5 &lt; Base
  def self.digest(password, stretches, salt, pepper)
    str = [password, salt].flatten.compact.join
    Digest::MD5.hexdigest(str)
  end
end
</code></pre>

<p>  end
end
```</p>

<p>在config/initializers/devise.rb中加载md5加密</p>

<p><code>ruby
require Rails.root.join('lib', 'devise', 'encryptable', 'encryptors', 'md5')
</code></p>

<p>在config/initializers/devise.rb中修改加密方式为md5</p>

<p><code>ruby
config.encryptor = :md5
</code></p>

<p>添加 :encryptable 到User model.</p>

<p>如果password_salt为空的话，要在model中加入如下代码</p>

<p>``` ruby</p>

<h1>for devise</h1>

<p>class User &lt; ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :token_authenticatable, :encryptable, :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable, :confirmable,</p>

<pre><code>     :recoverable, :rememberable, :trackable, :validatable
</code></pre>

<p>  devise :encryptable</p>

<p>  # Setup accessible (or protected) attributes for your model
  attr_accessible :email, :username, :password, :password_confirmation, :remember_me</p>

<p>  # for devise
  def password_salt=(password_salt)
  end</p>

<p>  def password_salt
  end</p>

<p>  protected</p>

<pre><code>def password_digest(password)
    Devise::Encryptable::Encryptors::Md5::digest(password, self.class.stretches, authenticatable_salt, self.class.pepper)
end
</code></pre>

<p>end
```</p>

<p>这里必须覆盖password_digest方法，因为password_digest中监测了password_salt是否为空</p>

<p>在https://github.com/plataformatec/devise-encryptable/blob/master/lib/devise/encryptable/model.rb中56行</p>

<p>```ruby</p>

<h1>Digests the password using the configured encryptor.</h1>

<pre><code>  def password_digest(password)
    if password_salt.present?
      encryptor_class.digest(password, self.class.stretches, authenticatable_salt, self.class.pepper)
    end
  end
</code></pre>

<p>```</p>

<h3>参考信息:</h3>

<p><a href="https://github.com/plataformatec/devise/wiki/How-To:-Create-a-custom-encryptor">How-To:-Create-a-custom-encryptor</a></p>
]]></content>
  </entry>
  
</feed>
