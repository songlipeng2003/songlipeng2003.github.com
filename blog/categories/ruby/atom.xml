<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: ruby | 舞命小丢]]></title>
  <link href="http://7d-life.com/blog/categories/ruby/atom.xml" rel="self"/>
  <link href="http://7d-life.com/"/>
  <updated>2012-05-18T18:07:17+08:00</updated>
  <id>http://7d-life.com/</id>
  <author>
    <name><![CDATA[舞命小丢]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[install rmagick fail on macbook lion]]></title>
    <link href="http://7d-life.com/blog/2012/05/18/install-rmagick-fail/"/>
    <updated>2012-05-18T17:59:00+08:00</updated>
    <id>http://7d-life.com/blog/2012/05/18/install-rmagick-fail</id>
    <content type="html"><![CDATA[<p>错误信息</p>

<p>```
$ gem install rmagick
Buildingnative extensions.  This could take a while...ERROR:  Error installing rmagick:        ERROR:Failed to build gem native extension.        /Users/dhiemstra/.rvm/rubies/ruby-1.9.3-head/bin/ruby extconf.rb
checking forRuby version >=1.8.5... yes
extconf.rb:128:UseRbConfig instead of obsolete and deprecated Config.checking for clang... yes
checking forMagick-config... yes
checking forImageMagick version >=6.4.9... yes
checking for HDRI disabled version of ImageMagick... yes
checking for stdint.h...<strong><em> extconf.rb failed </em></strong>Couldnot create Makefile due to some reason, probably lack of
necessary libraries and/or headers.  Check the mkmf.log file for more
details.  You may need configuration options.Provided configuration options:        --with-opt-dir</p>

<pre><code>    --without-opt-dir
    --with-opt-include
    --without-opt-include=${opt-dir}/include
    --with-opt-lib
    --without-opt-lib=${opt-dir}/lib
    --with-make-prog
    --without-make-prog
    --srcdir=.        --curdir
    --ruby=/Users/dhiemstra/.rvm/rubies/ruby-1.9.3-head/bin/ruby
</code></pre>

<p>/Users/dhiemstra/.rvm/rubies/ruby-1.9.3-head/lib/ruby/1.9.1/mkmf.rb:381:in`try_do': The compiler failed to generate an executable file. (RuntimeError)
```</p>

<p>需要卸载了，重新安装</p>

<p><code>
brew uninstall imagemagick
brew install imagemagick --disable-openmp
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use devise on legacy database width md5]]></title>
    <link href="http://7d-life.com/blog/2012/05/18/use-devise-on-legacy-database-width-md5/"/>
    <updated>2012-05-18T17:01:00+08:00</updated>
    <id>http://7d-life.com/blog/2012/05/18/use-devise-on-legacy-database-width-md5</id>
    <content type="html"><![CDATA[<p>建议使用deivse 2.1,并且添加devise-encryptable</p>

<p>``` ruby</p>

<h1>Gemfile</h1>

<p>gem 'devise', '~> 2.1'
gem 'devise-encryptable'
```</p>

<p>实现自己的加密方式,我是使用的是md5：</p>

<p>``` ruby</p>

<h1>lib/devise/encryptable/encryptors/md5.rb</h1>

<p>require 'digest/md5'</p>

<p>module Devise
  module Encryptable</p>

<pre><code>module Encryptors
  class Md5 &lt; Base
    def self.digest(password, stretches, salt, pepper)
      str = [password, salt].flatten.compact.join
      Digest::MD5.hexdigest(str)
    end
  end
end
</code></pre>

<p>  end
end
```</p>

<p>如果Devise版本低于2.1</p>

<p>``` ruby</p>

<h1>lib/devise/encryptors/md5.rb</h1>

<p>require 'digest/md5'</p>

<p>module Devise
  module Encryptors</p>

<pre><code>class Md5 &lt; Base
  def self.digest(password, stretches, salt, pepper)
    str = [password, salt].flatten.compact.join
    Digest::MD5.hexdigest(str)
  end
end
</code></pre>

<p>  end
end
```</p>

<p>在config/initializers/devise.rb中加载md5加密</p>

<p><code>ruby
require Rails.root.join('lib', 'devise', 'encryptable', 'encryptors', 'md5')
</code></p>

<p>在config/initializers/devise.rb中修改加密方式为md5</p>

<p><code>ruby
config.encryptor = :md5
</code></p>

<p>添加 :encryptable 到User model.</p>

<p>如果password_salt为空的话，要在model中加入如下代码</p>

<p>``` ruby</p>

<h1>for devise</h1>

<p>class User &lt; ActiveRecord::Base
  # Include default devise modules. Others available are:
  # :token_authenticatable, :encryptable, :confirmable, :lockable, :timeoutable and :omniauthable
  devise :database_authenticatable, :registerable, :confirmable,</p>

<pre><code>     :recoverable, :rememberable, :trackable, :validatable
</code></pre>

<p>  devise :encryptable</p>

<p>  # Setup accessible (or protected) attributes for your model
  attr_accessible :email, :username, :password, :password_confirmation, :remember_me</p>

<p>  # for devise
  def password_salt=(password_salt)
  end</p>

<p>  def password_salt
  end</p>

<p>  protected</p>

<pre><code>def password_digest(password)
    Devise::Encryptable::Encryptors::Md5::digest(password, self.class.stretches, authenticatable_salt, self.class.pepper)
end
</code></pre>

<p>end
```</p>

<p>这里必须覆盖password_digest方法，因为password_digest中监测了password_salt是否为空</p>

<p>在https://github.com/plataformatec/devise-encryptable/blob/master/lib/devise/encryptable/model.rb中56行</p>

<p>```ruby</p>

<h1>Digests the password using the configured encryptor.</h1>

<pre><code>  def password_digest(password)
    if password_salt.present?
      encryptor_class.digest(password, self.class.stretches, authenticatable_salt, self.class.pepper)
    end
  end
</code></pre>

<p>```</p>

<h3>参考信息:</h3>

<p><a href="https://github.com/plataformatec/devise/wiki/How-To:-Create-a-custom-encryptor">How-To:-Create-a-custom-encryptor</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[attr attr_accessor attr_accessible attr_protected]]></title>
    <link href="http://7d-life.com/blog/2012/05/02/attr-attr-accessor-attr-accessible/"/>
    <updated>2012-05-02T21:39:00+08:00</updated>
    <id>http://7d-life.com/blog/2012/05/02/attr-attr-accessor-attr-accessible</id>
    <content type="html"><![CDATA[<p>attr_accessor是Ruby提供的方法，相当于帮你生产读写方法，同时兼备 attr_reader attr_writer 的作用</p>

<p>attr_reader 相当于生产读方法</p>

<p>attr_writer 相当于生产写方法</p>

<p>attr 只能带一个符号参数，第二个参数是一个 bool 参数，用于指示是否为头一个符号参数产生写方法。它的默认值是 false , 不产生写方法。</p>

<p>attr_accessible是rals的提供的方法，指的是能某些字段可以通过前端来赋值</p>

<p>attr_protected是rals的提供的方法，作用恰好和attr_accessible相反，指定某些字段不能够前端来赋值</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[use capistrano to deploy]]></title>
    <link href="http://7d-life.com/blog/2012/04/25/use-capistrano-to-deploy/"/>
    <updated>2012-04-25T13:09:00+08:00</updated>
    <id>http://7d-life.com/blog/2012/04/25/use-capistrano-to-deploy</id>
    <content type="html"><![CDATA[<p>一直在寻找一个好的部署工具，以前用java的时候，经常过maven，ant，更多是用来构建，而不是部署。</p>

<p>前一段使用cakephp一直也想找一个这样的工具，也是没有找到。</p>

<p>开始学习RoR的开发，在ruby-china的代码中发现了<a href="https://github.com/capistrano/capistrano">capistrano</a> 这个工具，看了一下介绍，感觉就是我理想中工具</p>

<p>支持多服务器，服务器重启，自定义任务，版本切换，版本管理工具支持，可以连接ssh，对服务器操作</p>

<p>而且还有很多第三方扩展：</p>

<p><a href="https://github.com/jadb/capcake">cakephp扩展-capcake</a></p>

<p><a href="http://www.playframework.org/modules/capistrano">play扩展</a></p>

<p><div class='bogus-wrapper'><notextile><figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ssh-keygen -p
</span><span class='line'>cd ~/.ssh
</span><span class='line'>cp id_rsa.pub authorized_keys
</span><span class='line'>scp -p ~/.ssh/authorized_keys hrothgar:.ssh/</span></code></pre></td></tr></table></div></figure></notextile></div></p>
]]></content>
  </entry>
  
</feed>
